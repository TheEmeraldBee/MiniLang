{
By: TheEmeraldBee
Required Libraries: Default
Required Modules: N/A

Description:
A Good Showing Of All The Features Of MiniLang,
but in game format!

To Try Me, Change The Path In Program.cs in the test project to the absolute path of this file!
}

{A function that sets the current index to a number input, but checks for errors!}
F"RequireInput" { > is max inclusive } (
    *1000 {Set The Active Value To 1000, for checking the input}
    
    {While Input Is 1000}
    W T1000 = [
        {Force Player To Input Number}
        : _ | P"Please Input A Number: " ;
        
        ( > =< < | P"Please Input A Number Between : "/ T0. P" and " >. < P" -> " *1000 )
    ]
)

P"Would You Like To Go: " / P"Left: 0 or Right: 1? -> "
$1 *1 {Set options for require input}
$0 R"RequireInput" {Set idx 0 to the result of require input}

{If Left}
( $0 = T0 |
P"You Died!"

{Right} |

P"Would You Like To Go: " / P"Left: 0, Right: 1, Up: 2, Down: 3 -> "
$1 *3
$0 R"RequireInput"

{If Right}
($0 = T1 |
P"Success!"

{Any Other} |
P"Succc"
)

)